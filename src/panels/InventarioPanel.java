/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Clases.Articulo;
import Clases.ConectarCloudcPanel;
import Clases.Familia;
import Clases.Talla;
import Clases.Tela;
import Clases.TipoUnidad;
import Clases.exportarExcel;
import Clases.tools;
import Frames.ArticuloFrame;
import Frames.Carga;
import Frames.MainFrame;
import java.awt.Dimension;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSNotifyFade;

public class InventarioPanel extends javax.swing.JPanel {

    ArticuloFrame itemFrame = new ArticuloFrame();
    static tablaPanel ptabla = new tablaPanel();
    static ArrayList<Articulo> lista = new ArrayList();
    Articulo articulo = new Articulo();
    String filterEstado = "todos", filterFamilia = "todos", filterTalla = "todos", filterTela = "todos",
            filterGramaje = "todos", filterUnidad = "todos";
    boolean filterStock = false;
    boolean verFiltros = false;
    static Carga load = new Carga();
    static DefaultTableModel modelo;
    public InventarioPanel() {
        initComponents();
        scrollTabla.setViewportView(ptabla);
        filtroPanel.setVisible(!filtroPanel.isVisible());
        modelo = (DefaultTableModel) ptabla.tabla2.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoStock = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        valorTxt = new rojeru_san.rsfield.RSTextFullRound();
        rSButtonEffect1 = new rojeru_san.rsbutton.RSButtonEffect();
        agregarBtn = new rojeru_san.rsbutton.RSButtonEffect();
        rSButtonEffect2 = new rojeru_san.rsbutton.RSButtonEffect();
        rSButtonEffect4 = new rojeru_san.rsbutton.RSButtonEffect();
        editBtn = new rojeru_san.rsbutton.RSButtonEffect();
        rSButtonEffect5 = new rojeru_san.rsbutton.RSButtonEffect();
        rSButtonEffect6 = new rojeru_san.rsbutton.RSButtonEffect();
        scrollTabla = new javax.swing.JScrollPane();
        filtroPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        estadoCombo = new rojerusan.RSComboBox();
        jLabel4 = new javax.swing.JLabel();
        familiaCombo = new rojerusan.RSComboBox();
        jLabel5 = new javax.swing.JLabel();
        tallaCombo = new rojerusan.RSComboBox();
        jLabel6 = new javax.swing.JLabel();
        telaCombo = new rojerusan.RSComboBox();
        jLabel7 = new javax.swing.JLabel();
        gramajeCombo = new rojerusan.RSComboBox();
        jLabel8 = new javax.swing.JLabel();
        unidadCombo = new rojerusan.RSComboBox();
        jLabel9 = new javax.swing.JLabel();
        radioSi = new rojerusan.RSRadioButton();
        radioNo = new rojerusan.RSRadioButton();
        resetFiltrosBtn = new rojeru_san.rsbutton.RSButtonEffect();
        resetFiltrosBtn1 = new rojeru_san.rsbutton.RSButtonEffect();

        setBackground(new java.awt.Color(59, 59, 59));

        jPanel1.setOpaque(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_empty_box_32px.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        valorTxt.setBackground(new java.awt.Color(59, 59, 59));
        valorTxt.setForeground(new java.awt.Color(194, 232, 255));
        valorTxt.setToolTipText("Ingresa la descripción del articulo que desees buscar");
        valorTxt.setBorderColor(new java.awt.Color(194, 232, 255));
        valorTxt.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        valorTxt.setPhColor(new java.awt.Color(194, 232, 255));
        valorTxt.setPlaceholder("Descripción de Articulo");

        rSButtonEffect1.setBackground(new java.awt.Color(59, 59, 59));
        rSButtonEffect1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_search_32px.png"))); // NOI18N
        rSButtonEffect1.setToolTipText("Buscar articulo por el texto ingresado");
        rSButtonEffect1.setColorHover(new java.awt.Color(102, 102, 102));
        rSButtonEffect1.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        rSButtonEffect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonEffect1ActionPerformed(evt);
            }
        });

        agregarBtn.setBackground(new java.awt.Color(59, 59, 59));
        agregarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_add_32px.png"))); // NOI18N
        agregarBtn.setToolTipText("Agregar nuevo articulo");
        agregarBtn.setColorHover(new java.awt.Color(102, 102, 102));
        agregarBtn.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        agregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBtnActionPerformed(evt);
            }
        });

        rSButtonEffect2.setBackground(new java.awt.Color(59, 59, 59));
        rSButtonEffect2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_microsoft_excel_32px.png"))); // NOI18N
        rSButtonEffect2.setToolTipText("Generar Excel con los datos de la tabla");
        rSButtonEffect2.setColorHover(new java.awt.Color(102, 102, 102));
        rSButtonEffect2.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        rSButtonEffect2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonEffect2ActionPerformed(evt);
            }
        });

        rSButtonEffect4.setBackground(new java.awt.Color(59, 59, 59));
        rSButtonEffect4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_restore_32px_1.png"))); // NOI18N
        rSButtonEffect4.setToolTipText("Reiniciar resultados.");
        rSButtonEffect4.setColorHover(new java.awt.Color(102, 102, 102));
        rSButtonEffect4.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        rSButtonEffect4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonEffect4ActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(59, 59, 59));
        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_edit_32px_3.png"))); // NOI18N
        editBtn.setToolTipText("Editar articulo seleccionado");
        editBtn.setColorHover(new java.awt.Color(102, 102, 102));
        editBtn.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        rSButtonEffect5.setBackground(new java.awt.Color(59, 59, 59));
        rSButtonEffect5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_filter_edit_32px.png"))); // NOI18N
        rSButtonEffect5.setToolTipText("Ver Filtros de búsqueda");
        rSButtonEffect5.setColorHover(new java.awt.Color(102, 102, 102));
        rSButtonEffect5.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        rSButtonEffect5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonEffect5ActionPerformed(evt);
            }
        });

        rSButtonEffect6.setBackground(new java.awt.Color(59, 59, 59));
        rSButtonEffect6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_business_report_32px.png"))); // NOI18N
        rSButtonEffect6.setToolTipText("Reporte Completo");
        rSButtonEffect6.setColorHover(new java.awt.Color(102, 102, 102));
        rSButtonEffect6.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        rSButtonEffect6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonEffect6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(valorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rSButtonEffect1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(agregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rSButtonEffect2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rSButtonEffect4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rSButtonEffect5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rSButtonEffect6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(valorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rSButtonEffect1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rSButtonEffect5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agregarBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(rSButtonEffect2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(rSButtonEffect4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(editBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(rSButtonEffect6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        scrollTabla.setBackground(new java.awt.Color(0, 255, 102));
        scrollTabla.setAutoscrolls(true);

        filtroPanel.setOpaque(false);
        filtroPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                filtroPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                filtroPanelMouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("- Filtros de búsqueda en el Inventario -");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Estado");

        estadoCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Activo", "Inactivo" }));
        estadoCombo.setDisabledIdex("");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Familia");

        familiaCombo.setDisabledIdex("");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Talla");

        tallaCombo.setDisabledIdex("");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tela:");

        telaCombo.setDisabledIdex("");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Gramaje:");

        gramajeCombo.setDisabledIdex("");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Unidad:");

        unidadCombo.setDisabledIdex("");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ver Stock en 0:");

        grupoStock.add(radioSi);
        radioSi.setForeground(new java.awt.Color(255, 255, 255));
        radioSi.setSelected(true);
        radioSi.setText("SI");
        radioSi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioSiItemStateChanged(evt);
            }
        });

        grupoStock.add(radioNo);
        radioNo.setForeground(new java.awt.Color(255, 255, 255));
        radioNo.setText("NO");
        radioNo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioNoItemStateChanged(evt);
            }
        });

        resetFiltrosBtn.setBackground(new java.awt.Color(59, 59, 59));
        resetFiltrosBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_restore_32px_1.png"))); // NOI18N
        resetFiltrosBtn.setText("Resetear Filtros y Resultados");
        resetFiltrosBtn.setToolTipText("Reiniciar Filtros.");
        resetFiltrosBtn.setColorHover(new java.awt.Color(102, 102, 102));
        resetFiltrosBtn.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        resetFiltrosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetFiltrosBtnActionPerformed(evt);
            }
        });

        resetFiltrosBtn1.setBackground(new java.awt.Color(59, 59, 59));
        resetFiltrosBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_search_32px.png"))); // NOI18N
        resetFiltrosBtn1.setText("Actualizar Resultados con el Filtro");
        resetFiltrosBtn1.setToolTipText("Reiniciar Filtros.");
        resetFiltrosBtn1.setColorHover(new java.awt.Color(102, 102, 102));
        resetFiltrosBtn1.setEfecto(rojeru_san.rsbutton.RSButtonEffect.EFECTO.RIPPLE);
        resetFiltrosBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetFiltrosBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filtroPanelLayout = new javax.swing.GroupLayout(filtroPanel);
        filtroPanel.setLayout(filtroPanelLayout);
        filtroPanelLayout.setHorizontalGroup(
            filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(filtroPanelLayout.createSequentialGroup()
                        .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(filtroPanelLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gramajeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(estadoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(unidadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(filtroPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(telaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(filtroPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tallaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(familiaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtroPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(radioSi, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(radioNo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60))
                                .addComponent(resetFiltrosBtn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(resetFiltrosBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        filtroPanelLayout.setVerticalGroup(
            filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtroPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estadoCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(familiaCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tallaCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telaCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gramajeCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unidadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filtroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioSi, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addComponent(resetFiltrosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetFiltrosBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(filtroPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollTabla))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTabla)
                    .addComponent(filtroPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rSButtonEffect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonEffect1ActionPerformed
         if (validarFiltros()) { // no existe ningun Filtro
            new Thread(InventarioPanel::verCarga).start();
            llenarTabla("");
            new Thread(InventarioPanel::ocultarCarga).start();
        } else {
             new Thread(InventarioPanel::verCarga).start();
           vaciarTabla();
             buscarConFiltros();
            new Thread(InventarioPanel::ocultarCarga).start();
        }
    }//GEN-LAST:event_rSButtonEffect1ActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (ptabla.tabla2.getSelectedRow() < 0) {
            new rojerusan.RSNotifyFade("¡¡Selecciona un Item!!", " Para editar antes debe seleccionar un articulo ", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

        } else {

            if (itemFrame.isShowing()) {

                new rojerusan.RSNotifyFade("¡¡Ventana Abierta!!", "Ya se está visualizando o agregando un articulo. Cierre antes la ventana", 5, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);
            } else {
                String codigo = ptabla.tabla2.getValueAt(ptabla.tabla2.getSelectedRow(), 0).toString();
                for (Articulo articulox : lista) {
                    if (codigo.equals(articulox.getCodigo())) {
                        articulo = articulox;
                    }
                }
                itemFrame = new ArticuloFrame(articulo);
                itemFrame.setVisible(true);
                itemFrame.iniciarDatos();
            }

        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void agregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBtnActionPerformed
        if (itemFrame.isShowing()) {
            new rojerusan.RSNotifyFade("¡¡Ventana Abierta!!", "Ya se está visualizando o agregando un articulo. Cierre antes la ventana", 5, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);
        } else {
            itemFrame = new ArticuloFrame();
            itemFrame.setVisible(true);
        }
    }//GEN-LAST:event_agregarBtnActionPerformed

    private void rSButtonEffect4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonEffect4ActionPerformed
        reiniciarDatos();
    }//GEN-LAST:event_rSButtonEffect4ActionPerformed

    private void rSButtonEffect2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonEffect2ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) ptabla.tabla2.getModel();
        if (modelo.getRowCount() < 1) {
            new rojerusan.RSNotifyFade("¡¡No hay Datos!!", "Para exportar datos a Excel debe existir al menos 01 resultado", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);
        } else {
            try {
                new exportarExcel().exportarExcel(ptabla.tabla2, "Inventario Actual");
            } catch (IOException ex) {
                Logger.getLogger(InventarioPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rSButtonEffect2ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) ptabla.tabla2.getModel();
        System.out.println(modelo.getRowCount());
    }//GEN-LAST:event_jLabel1MouseClicked

    private void rSButtonEffect5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonEffect5ActionPerformed
        filtroPanel.setVisible(!filtroPanel.isVisible());
    }//GEN-LAST:event_rSButtonEffect5ActionPerformed

    private void radioSiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioSiItemStateChanged
        filterStock = radioSi.isSelected();
    }//GEN-LAST:event_radioSiItemStateChanged

    private void radioNoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioNoItemStateChanged
        // filterStock = !radioNo.isSelected();
        //   System.out.println("NO-> Stock 0: "+filterStock);
    }//GEN-LAST:event_radioNoItemStateChanged

    private void resetFiltrosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetFiltrosBtnActionPerformed
       // actualizarFiltros();
        vaciarTabla();
    }//GEN-LAST:event_resetFiltrosBtnActionPerformed

    private void filtroPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtroPanelMouseEntered
        if (verFiltros == false) {
            verFiltros = true;
        }
    }//GEN-LAST:event_filtroPanelMouseEntered

    private void filtroPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtroPanelMouseExited
        /*
        if(verFiltros==true){
            verFiltros=false;
            filtroPanel.setVisible(!filtroPanel.isVisible());
        }
         */

    }//GEN-LAST:event_filtroPanelMouseExited

    private void resetFiltrosBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetFiltrosBtn1ActionPerformed
        if (validarFiltros() == true) { // no existe ningun Filtro
            new Thread(InventarioPanel::verCarga).start();
            llenarTabla("");
            new Thread(InventarioPanel::ocultarCarga).start();
        } else {
             new Thread(InventarioPanel::verCarga).start();
                vaciarTabla();
             buscarConFiltros();
            new Thread(InventarioPanel::ocultarCarga).start();
        }
    }//GEN-LAST:event_resetFiltrosBtn1ActionPerformed

    private void rSButtonEffect6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonEffect6ActionPerformed
     Object colNames[] ={
         "#","Código","Familia","Nombre","Tipo Unidad","Stock","Talla","Cant Inner Pack","Cant Master Pack",
             "Tela","Gramaje","Color","Fecha Creación", "Última Modificación", "Esado","Precio sin IGV",
             "Peso Inner Pack","Peso Master Pack","Precio USD sin Igv","Valor Minimo","Valor Máximo",
             "Categoria", "Sub Categoria", "Aséptico","AntiFluido","Anti Estático", "Anti Deslizante",
             "Descartable", "Esteril"
         };      
                
               
         DefaultTableModel model = new DefaultTableModel(null,colNames); 
         JTable tab = new JTable(model);
          tab.setAutoCreateRowSorter(true);
        tab.setPreferredScrollableViewportSize(new Dimension(320, 160));
        
        if (modelo.getRowCount() < 1) {
            new rojerusan.RSNotifyFade("¡¡No hay Datos!!", "Para exportar datos a Excel debe existir al menos 01 resultado", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);
        } else {
            try {
           
         
       for(Articulo a : lista){
           model.addRow(new Object[]{
           a.getId(),a.getCodigo(),a.getFamilia(),a.getNombre(),a.getTipoUnidad(),a.getStock(),a.getTalla(),
           a.getCantInnerPack(),a.getCantMasterPack(),a.getTela(),a.getGramaje(),a.getColor(),a.getFechaCreacion(),
           a.getUltimamodificacion(),a.getEstado(),a.getPrecioSigv(),a.getPesoInnerPack(),a.getPesoMasterPack(),
           a.getPrecioUsdsigv(),a.getValorMinimo(),a.getValorMaximo(),a.getCategoria(),a.getSubCategoria(),
           a.getAseptico().equalsIgnoreCase("f")?"No":"Si",
           a.getAntiFluido().equalsIgnoreCase("f")?"No":"Si",
           a.getAntiEstatico().equalsIgnoreCase("f")?"No":"Si",
           a.getAntiDeslizante().equalsIgnoreCase("f")?"No":"Si",
           a.getDescartable().equalsIgnoreCase("f")?"No":"Si",
           a.getEsteril().equalsIgnoreCase("f")?"No":"Si"
           });
     }
                new exportarExcel().exportarExcel(tab, "Inventario");
            } catch (IOException ex) {
                Logger.getLogger(InventarioPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        
        
        
        
        
         
       
    }//GEN-LAST:event_rSButtonEffect6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public rojeru_san.rsbutton.RSButtonEffect agregarBtn;
    public static rojeru_san.rsbutton.RSButtonEffect editBtn;
    private static rojerusan.RSComboBox estadoCombo;
    private static rojerusan.RSComboBox familiaCombo;
    private javax.swing.JPanel filtroPanel;
    private static rojerusan.RSComboBox gramajeCombo;
    private javax.swing.ButtonGroup grupoStock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private rojeru_san.rsbutton.RSButtonEffect rSButtonEffect1;
    private rojeru_san.rsbutton.RSButtonEffect rSButtonEffect2;
    private rojeru_san.rsbutton.RSButtonEffect rSButtonEffect4;
    private rojeru_san.rsbutton.RSButtonEffect rSButtonEffect5;
    private rojeru_san.rsbutton.RSButtonEffect rSButtonEffect6;
    private static rojerusan.RSRadioButton radioNo;
    private static rojerusan.RSRadioButton radioSi;
    private rojeru_san.rsbutton.RSButtonEffect resetFiltrosBtn;
    private rojeru_san.rsbutton.RSButtonEffect resetFiltrosBtn1;
    private javax.swing.JScrollPane scrollTabla;
    private static rojerusan.RSComboBox tallaCombo;
    private static rojerusan.RSComboBox telaCombo;
    private static rojerusan.RSComboBox unidadCombo;
    private static rojeru_san.rsfield.RSTextFullRound valorTxt;
    // End of variables declaration//GEN-END:variables

    public static void reiniciarDatos() {
        vaciarTabla();
        llenarTabla("");
        new rojerusan.RSNotifyFade("¡¡Refresh!! ", "Datos Actualizados!", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
    }

    public static void reiniciarDatos(String buscarCodigo) {

        llenarTabla("");
        for (int i = 0; i < ptabla.tabla2.getRowCount(); i++) {
            if (ptabla.tabla2.getValueAt(i, 0).equals(buscarCodigo)) {
                ptabla.tabla2.changeSelection(i, 0, false, false);
            }
        }

    }

    public static void vaciarTabla() {
       // DefaultTableModel modelo = (DefaultTableModel) ptabla.tabla2.getModel();
        modelo.setRowCount(0);
        lista.clear();
    }

    public static void llenarTabla() {
        vaciarTabla();
        lista = (ArrayList) new Articulo().ConsInventarioxCodyNombrexEstado("", "Activo").clone();
        setProductos(lista);
        
       // DefaultTableModel modelo = (DefaultTableModel) ptabla.tabla2.getModel();
        ptabla.tabla2.setEnabled(true);
        double totalValorizado = 0.0;
        for (Articulo articulo : lista) {
            double stockx = articulo.getStock();
            double preciox = articulo.getPrecioSigv();
            double valorizado = (stockx * preciox);
            totalValorizado += valorizado;
            String valorizadoString = new DecimalFormat("#.00").format(valorizado);
            modelo.addRow(new Object[]{
                articulo.getCodigo(), articulo.getNombre(), articulo.getTipoUnidad(),
                stockx, preciox, valorizadoString,
                articulo.getEstado(), articulo.getFamilia(),
                articulo.getTalla(), articulo.getTela(), articulo.getGramaje(),
                articulo.getUltimamodificacion()
            });
        }
        String totalValorizadoString = new DecimalFormat("#.00").format(totalValorizado);
        modelo.addRow(new Object[]{"-", "Total Inventario Valorizado", "-", "-", "->", totalValorizadoString});
        if (modelo.getRowCount() == 0) {
            modelo.addRow(new Object[]{
                "", "Sin resultados"
            });
        }

    }

    public static void llenarTabla(String text) {
vaciarTabla();
        lista = (ArrayList) new Articulo().ConsInventarioxCodyNombrexEstado(text, "Activo").clone();
        setProductos(lista);
        
        //DefaultTableModel modelo = (DefaultTableModel) ptabla.tabla2.getModel();
        ptabla.tabla2.setEnabled(true);
        double totalValorizado = 0.0;
        for (Articulo articulo : lista) {
            double stockx = articulo.getStock();
            double preciox = articulo.getPrecioSigv();
            double valorizado = (stockx * preciox);
            totalValorizado += valorizado;
            String valorizadoString = new DecimalFormat("#.00").format(valorizado);
            modelo.addRow(new Object[]{
                articulo.getCodigo(), articulo.getNombre(), articulo.getTipoUnidad(),
                stockx, preciox, valorizadoString,
                articulo.getEstado(), articulo.getFamilia(),
                articulo.getTalla(), articulo.getTela(), articulo.getGramaje(),
                articulo.getUltimamodificacion()
            });
        }
        String totalValorizadoString = new DecimalFormat("#.00").format(totalValorizado);
        modelo.addRow(new Object[]{"-", "Total Inventario Valorizado", "-", "-", "->", totalValorizadoString});
        if (modelo.getRowCount() == 0) {
            modelo.addRow(new Object[]{
                "", "Sin resultados"
            });
        }

    }

    private void ini() {
        llenarTabla("");
    }

    public static void setProductos(ArrayList listax) {
        lista = (ArrayList) listax.clone();
    }

    private static void llenarFamilia() {
        familiaCombo.removeAllItems();;
        familiaCombo.addItem("Todos");
        familiaCombo.setSelectedIndex(0);
        for (Familia f : MainFrame.getFamilia()) {
            familiaCombo.addItem(f.getNombre());
        }
    }

    private static void llenarTalla() {
        tallaCombo.removeAllItems();;
        tallaCombo.addItem("Todos");
        tallaCombo.setSelectedIndex(0);
        for (Talla t : MainFrame.getTalla()) {
            tallaCombo.addItem(t.getNombre());
        }
    }

    private static void llenarTela() {
        telaCombo.removeAllItems();;
        telaCombo.addItem("Todos");
        telaCombo.setSelectedIndex(0);
        for (Tela t : MainFrame.getTipoTela()) {
            telaCombo.addItem(t.getNombre());
        }
    }

    private static void llenarGramaje() {
        gramajeCombo.removeAllItems();;
        gramajeCombo.addItem("Todos");
        gramajeCombo.setSelectedIndex(0);
        for (Articulo art : lista) {
            boolean llave = false;
            for (int i = 0; i < gramajeCombo.getItemCount(); i++) {
                if (gramajeCombo.getItemAt(i).equals(art.getGramaje())) {
                    llave = true;
                }
            }
            if (llave == false) {
                gramajeCombo.addItem(art.getGramaje());
            }
        }
    }

    private static void llenarUnidad() {
        unidadCombo.removeAllItems();;
        unidadCombo.addItem("Todos");
        unidadCombo.setSelectedIndex(0);
        for (TipoUnidad und : MainFrame.getTipoUnidad()) {
            unidadCombo.addItem(und.getNombre());
        }
    }

    public static void actualizarFiltros() {
        llenarFamilia();
        llenarTalla();
        llenarTela();
        llenarGramaje();
        llenarUnidad();

    }

    private boolean validarFiltros() {
        boolean llave = false;
        if (radioSi.isSelected() && estadoCombo.getSelectedIndex() == 0
                && familiaCombo.getSelectedIndex() == 0 && tallaCombo.getSelectedIndex() == 0
                && telaCombo.getSelectedIndex() == 0 && gramajeCombo.getSelectedIndex() == 0
                && unidadCombo.getSelectedIndex() == 0) {
            llave = true;
        }
        
        return llave;
    }

    public static void buscarConFiltros() {
         //new tools().getLlamado();
        PreparedStatement pst = null;
        ResultSet rs = null;
        try (Connection con = new ConectarCloudcPanel("corporacionagama_mainbigmedic").getCon()) {
        //DefaultTableModel modelo = (DefaultTableModel) ptabla.tabla2.getModel();
        
         ptabla.tabla2.setEnabled(true);
        
        String sql = " select * from inventario where 1=1 ";
        String tx = valorTxt.getText().length()<1?"":valorTxt.getText();
        if (tx.length() > 0) {
            sql += " and  ( lower(nombre) like lower ('%" + tx + "%') or lower(codigo) like lower ('%" + tx + "%')) ";
        }
        if (estadoCombo.getSelectedIndex() > 0) {
            sql += " and estado = '" + estadoCombo.getSelectedItem().toString() + "'";
        }
        if (familiaCombo.getSelectedIndex() > 0) {
            sql += " and familia = '" + familiaCombo.getSelectedItem().toString() + "'";
        }
        if (tallaCombo.getSelectedIndex() > 0) {
            sql += " and talla = '" + tallaCombo.getSelectedItem().toString() + "'";
        }
        if (telaCombo.getSelectedIndex() > 0) {
            sql += " and tela = '" + telaCombo.getSelectedItem().toString() + "'";
        }
        if (gramajeCombo.getSelectedIndex() > 0) {
            sql += " and gramaje = '" + gramajeCombo.getSelectedItem().toString() + "'";
        }

        if (unidadCombo.getSelectedIndex() > 0) {
            sql += " and gramaje = '" + unidadCombo.getSelectedItem().toString() + "'";
        }
        if(radioSi.isSelected()){
            sql +=" and stock>=0";
        }else{
            sql +=" and stock>0";
        }
        
        
        sql +=" order by nombre ASC";
        
        Articulo a = new Articulo();
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                a = new Articulo();
                a.setId(rs.getInt("id"));
                a.setCodigo(rs.getString("codigo"));
                a.setFamilia(rs.getString("familia"));
                a.setNombre(rs.getString("nombre"));
                a.setTipoUnidad(rs.getString("tipoUnidad"));
                a.setTalla(rs.getString("talla"));
                a.setCantInnerPack(rs.getString("cantInnerPack"));
                a.setCantMasterPack(rs.getString("cantMasterPack"));
                a.setTela(rs.getString("tela"));
                a.setGramaje(rs.getString("gramaje"));
                a.setColor(rs.getString("color"));
                a.setFechaCreacio(rs.getString("fechaCreacion"));
                a.setUltimamodificacion(rs.getString("ultimaModificacion"));
                a.setEstado(rs.getString("estado"));
                a.setStock(rs.getDouble("stock"));
                a.setPesoInnerPack(rs.getDouble("pesoInnerPack"));
                a.setPesoMasterPack(rs.getDouble("pesoMasterPack"));
                a.setPrecioSigv(rs.getDouble("precioSigv"));
                a.setPrecioUsdsigv(rs.getDouble("precioUsdsigv"));
                a.setValorMinimo(rs.getDouble("valorMinimo"));
                a.setValorMaximo(rs.getDouble("valorMaximo"));
                a.setCategoria(rs.getString("categoria"));
                a.setSubCategoria(rs.getString("subCategoria"));
                a.setAseptico(rs.getString("aseptico"));
                a.setAntiFluido(rs.getString("antiFluido"));
                a.setAntiDeslizante(rs.getString("antiDeslizante"));
                a.setAntiEstatico(rs.getString("antiEstatico"));
                a.setDescartable(rs.getString("descartable"));
                a.setEsteril(rs.getString("esteril"));
                lista.add(a);
                a = new Articulo();
            }
           // setProductos(lista);
            double totalValorizado = 0.0;
            for (Articulo articulo : lista) {
                double stockx = articulo.getStock();
                double preciox = articulo.getPrecioSigv();
                double valorizado = (stockx * preciox);
                totalValorizado += valorizado;
                String valorizadoString = new DecimalFormat("#.00").format(valorizado);
                modelo.addRow(new Object[]{
                    articulo.getCodigo(), articulo.getNombre(), articulo.getTipoUnidad(),
                    stockx, preciox, valorizadoString,
                    articulo.getEstado(), articulo.getFamilia(),
                    articulo.getTalla(), articulo.getTela(), articulo.getGramaje(),
                    articulo.getUltimamodificacion()
                });
            }
            String totalValorizadoString = new DecimalFormat("#.00").format(totalValorizado);
            modelo.addRow(new Object[]{"-", "Total Inventario Valorizado", "-", "-", "->", totalValorizadoString});
            if (modelo.getRowCount() == 0) {
                modelo.addRow(new Object[]{
                    "", "Sin resultados"
                });
            }
        } catch (Exception e) {
            Logger.getLogger(InventarioPanel.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Error con el manejo de base de datos, contacte con el adm.\n" + e);
        } finally {
            try {
                if (pst != null) {
                    pst.close();
                }
                if (rs != null) {
                    rs.close();
                }
            } catch (SQLException ex) {
                Logger.getLogger(InventarioPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        new Thread(InventarioPanel::ocultarCarga).start();
    }
    
    private static void verCarga(){
        load.setVisible(true);
    }
    private static void ocultarCarga(){
        load.setVisible(false);
    }
}
