/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Clases.ClienteI;
import com.sun.glass.events.KeyEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSNotifyFade;

/**
 *
 * @author Family
 */
public class panelParametroCliente extends javax.swing.JPanel {

    ArrayList<ClienteI> clientes = new ArrayList();
    int valor = -1;
    String estado = "Activo";
    public boolean agregar=false;
    public boolean editar=false;
    public panelParametroCliente() {
        initComponents();
        llenarClientes();
        //reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new rojerusan.RSTableMetro();
        buttonPane1 = new rojeru_san.complementos.ButtonPane();
        guardarBtn = new RSComponentShade.RSButtonRippleShade();
        bloqueadoRb = new rojerusan.RSRadioButton();
        activoRb = new rojerusan.RSRadioButton();
        jLabel3 = new javax.swing.JLabel();
        idTxt = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rucTxt = new rojeru_san.rsfield.RSTextFullRound();
        nuevoBtn = new RSComponentShade.RSButtonRippleShade();
        editarBtn = new RSComponentShade.RSButtonRippleShade();
        resetBtn = new RSComponentShade.RSButtonRippleShade();
        jLabel6 = new javax.swing.JLabel();
        rubroTxt = new rojeru_san.rsfield.RSTextFullRound();
        jLabel7 = new javax.swing.JLabel();
        razonSocialTxt = new rojeru_san.rsfield.RSTextFullRound();

        setBackground(new java.awt.Color(59, 59, 59));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_Users_30px.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Administración de Clientes.");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "#", "RUC", "Razón Social", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setBackgoundHead(new java.awt.Color(62, 62, 62));
        tabla.setColorBorderHead(new java.awt.Color(59, 59, 59));
        tabla.setColorBorderRows(new java.awt.Color(255, 255, 255));
        tabla.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        tabla.setColorSecondary(new java.awt.Color(255, 255, 255));
        tabla.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        tabla.setGridColor(new java.awt.Color(0, 0, 0));
        tabla.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMinWidth(80);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(80);
            tabla.getColumnModel().getColumn(0).setMaxWidth(90);
            tabla.getColumnModel().getColumn(1).setMinWidth(120);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(120);
            tabla.getColumnModel().getColumn(1).setMaxWidth(180);
            tabla.getColumnModel().getColumn(3).setMinWidth(100);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(3).setMaxWidth(140);
        }

        buttonPane1.setBackground(new java.awt.Color(59, 59, 59));
        buttonPane1.setColorHover(new java.awt.Color(60, 60, 60));
        buttonPane1.setColorNormal(new java.awt.Color(59, 59, 59));

        guardarBtn.setBackground(new java.awt.Color(59, 59, 59));
        guardarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_save_36px.png"))); // NOI18N
        guardarBtn.setBgHover(new java.awt.Color(110, 110, 110));
        guardarBtn.setBgShade(new java.awt.Color(59, 59, 59));
        guardarBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        guardarBtn.setEnabled(false);
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(bloqueadoRb);
        bloqueadoRb.setForeground(new java.awt.Color(255, 255, 255));
        bloqueadoRb.setText("Bloqueado");
        bloqueadoRb.setColorCheck(new java.awt.Color(0, 204, 255));
        bloqueadoRb.setColorUnCheck(new java.awt.Color(150, 150, 150));
        bloqueadoRb.setEnabled(false);
        bloqueadoRb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bloqueadoRbItemStateChanged(evt);
            }
        });
        bloqueadoRb.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bloqueadoRbStateChanged(evt);
            }
        });

        buttonGroup1.add(activoRb);
        activoRb.setForeground(new java.awt.Color(255, 255, 255));
        activoRb.setSelected(true);
        activoRb.setText("Activo");
        activoRb.setColorCheck(new java.awt.Color(0, 204, 255));
        activoRb.setColorUnCheck(new java.awt.Color(150, 150, 150));
        activoRb.setEnabled(false);
        activoRb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                activoRbItemStateChanged(evt);
            }
        });
        activoRb.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                activoRbStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("ID:");

        idTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idTxt.setForeground(new java.awt.Color(255, 255, 255));
        idTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idTxt.setText("-");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("RUC");

        rucTxt.setEditable(false);
        rucTxt.setBackground(new java.awt.Color(59, 59, 59));
        rucTxt.setForeground(new java.awt.Color(255, 255, 255));
        rucTxt.setBorderColor(new java.awt.Color(255, 255, 255));
        rucTxt.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        rucTxt.setPhColor(new java.awt.Color(255, 255, 255));
        rucTxt.setPlaceholder("Ingrese el valor");
        rucTxt.setSelectionColor(new java.awt.Color(0, 102, 102));
        rucTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rucTxtFocusGained(evt);
            }
        });
        rucTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rucTxtActionPerformed(evt);
            }
        });
        rucTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rucTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rucTxtKeyReleased(evt);
            }
        });

        nuevoBtn.setBackground(new java.awt.Color(59, 59, 59));
        nuevoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_add_32px.png"))); // NOI18N
        nuevoBtn.setBgHover(new java.awt.Color(110, 110, 110));
        nuevoBtn.setBgShade(new java.awt.Color(59, 59, 59));
        nuevoBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        editarBtn.setBackground(new java.awt.Color(59, 59, 59));
        editarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_edit_32px_3.png"))); // NOI18N
        editarBtn.setBgHover(new java.awt.Color(110, 110, 110));
        editarBtn.setBgShade(new java.awt.Color(59, 59, 59));
        editarBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(59, 59, 59));
        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_refresh_24px.png"))); // NOI18N
        resetBtn.setBgHover(new java.awt.Color(110, 110, 110));
        resetBtn.setBgShade(new java.awt.Color(59, 59, 59));
        resetBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Rubro:");

        rubroTxt.setEditable(false);
        rubroTxt.setBackground(new java.awt.Color(59, 59, 59));
        rubroTxt.setForeground(new java.awt.Color(255, 255, 255));
        rubroTxt.setBorderColor(new java.awt.Color(255, 255, 255));
        rubroTxt.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        rubroTxt.setPhColor(new java.awt.Color(255, 255, 255));
        rubroTxt.setPlaceholder("Ingrese el valor");
        rubroTxt.setSelectionColor(new java.awt.Color(0, 102, 102));
        rubroTxt.setSoloLetras(true);
        rubroTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rubroTxtFocusGained(evt);
            }
        });
        rubroTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rubroTxtActionPerformed(evt);
            }
        });
        rubroTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rubroTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rubroTxtKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Raz. Social");

        razonSocialTxt.setEditable(false);
        razonSocialTxt.setBackground(new java.awt.Color(59, 59, 59));
        razonSocialTxt.setForeground(new java.awt.Color(255, 255, 255));
        razonSocialTxt.setBorderColor(new java.awt.Color(255, 255, 255));
        razonSocialTxt.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        razonSocialTxt.setPhColor(new java.awt.Color(255, 255, 255));
        razonSocialTxt.setPlaceholder("Ingrese el valor");
        razonSocialTxt.setSelectionColor(new java.awt.Color(0, 102, 102));
        razonSocialTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                razonSocialTxtFocusGained(evt);
            }
        });
        razonSocialTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                razonSocialTxtActionPerformed(evt);
            }
        });
        razonSocialTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                razonSocialTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                razonSocialTxtKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout buttonPane1Layout = new javax.swing.GroupLayout(buttonPane1);
        buttonPane1.setLayout(buttonPane1Layout);
        buttonPane1Layout.setHorizontalGroup(
            buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPane1Layout.createSequentialGroup()
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(buttonPane1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rucTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rubroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(buttonPane1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(razonSocialTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(buttonPane1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(activoRb, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bloqueadoRb, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nuevoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guardarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)))))
                .addContainerGap())
        );
        buttonPane1Layout.setVerticalGroup(
            buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPane1Layout.createSequentialGroup()
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rucTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rubroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(razonSocialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPane1Layout.createSequentialGroup()
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guardarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nuevoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPane1Layout.createSequentialGroup()
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(activoRb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bloqueadoRb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int fila = tabla.getSelectedRow();
        String id = fila >= 0 ? tabla.getValueAt(fila, 0).toString() : "-";
        if (fila >= 0 && !id.equals("-") && valor < 0) {
            int idint = Integer.valueOf(id);
            for (ClienteI cliente : clientes) {
                if (idint == cliente.getId()) {
                    idTxt.setText(cliente.getId() + "");
                    rucTxt.setText(cliente.getRuc());
                    razonSocialTxt.setText(cliente.getRazonSocial());
                    rubroTxt.setText(cliente.getRubro());
                    if (cliente.getEstado().equalsIgnoreCase("activo")) {
                        activoRb.setSelected(true);
                    } else {
                        bloqueadoRb.setSelected(true);
                    }
                }

            }
        } else {
            new rojerusan.RSNotifyFade("¡¡No hay Selección!! ", "Seleccione un valor en la tabla valido para editar!", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

        }
    }//GEN-LAST:event_tablaMouseClicked

    private void razonSocialTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_razonSocialTxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_razonSocialTxtKeyReleased

    private void razonSocialTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_razonSocialTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_razonSocialTxtKeyPressed

    private void razonSocialTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_razonSocialTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_razonSocialTxtActionPerformed

    private void rubroTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rubroTxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_rubroTxtKeyReleased

    private void rubroTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rubroTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_rubroTxtKeyPressed

    private void rubroTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rubroTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rubroTxtActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        new Thread(this::reset).start();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed

        int fila = tabla.getSelectedRow();
        String id = fila >= 0 ? tabla.getValueAt(fila, 0).toString() : "-";
        if (fila >= 0 && !id.equals("-")) {
            activarDesactivar(true);
            valor = 1;
            editarBtn.setEnabled(false);
            int idint = Integer.valueOf(id);
            valor = 1;
            for (ClienteI cliente : clientes) {
                if (idint == cliente.getId()) {
                   idTxt.setText(cliente.getId() + "");
                    rucTxt.setText(cliente.getRuc());
                    razonSocialTxt.setText(cliente.getRazonSocial());
                    rubroTxt.setText(cliente.getRubro());
                    if (cliente.getEstado().equalsIgnoreCase("activo")) {
                        activoRb.setSelected(true);
                    } else {
                        bloqueadoRb.setSelected(true);
                    }
                }
            }
            nuevoBtn.setEnabled(false);
            guardarBtn.setEnabled(true);
        } else {
            new rojerusan.RSNotifyFade("¡¡No hay Selección!! ", "Seleccione un valor en la tabla valido para editar!", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

        }
    }//GEN-LAST:event_editarBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        rucTxt.requestFocus();
        valor = 0;
        activarDesactivar(true);
        bloqueadoRb.setEnabled(false);
        activoRb.setSelected(true);
        editarBtn.setEnabled(false);
        rucTxt.setText("");
        idTxt.setText("-");
        guardarBtn.setEnabled(true);
        nuevoBtn.setEnabled(false);
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void rucTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rucTxtKeyReleased
        if(rucTxt.getText().length()>43){
            evt.consume();
        }
    }//GEN-LAST:event_rucTxtKeyReleased

    private void rucTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rucTxtKeyPressed
        if(evt.getKeyLocation() == KeyEvent.VK_ESCAPE){
            new Thread(this::reset).start();
        }
    }//GEN-LAST:event_rucTxtKeyPressed

    private void rucTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rucTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rucTxtActionPerformed

    private void activoRbStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_activoRbStateChanged

    }//GEN-LAST:event_activoRbStateChanged

    private void activoRbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_activoRbItemStateChanged
        estado = "Activo";
    }//GEN-LAST:event_activoRbItemStateChanged

    private void bloqueadoRbStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bloqueadoRbStateChanged

    }//GEN-LAST:event_bloqueadoRbStateChanged

    private void bloqueadoRbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bloqueadoRbItemStateChanged
        estado = "Bloqueado";
    }//GEN-LAST:event_bloqueadoRbItemStateChanged

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        if (validarCamposLlenos() == true) {
            int id = Integer.valueOf(idTxt.getText().equals("-")?"0":idTxt.getText());
            String nombre = rucTxt.getText();
            String rucx = rucTxt.getText();
            String name = razonSocialTxt.getText();
            String rubrox = rubroTxt.getText();
            ClienteI temp = new ClienteI();
            
            
            boolean repetido = false;
                for (ClienteI cliente : clientes) {
                    if (cliente.getId() == id) {
                        repetido = true;
                        temp = cliente;
                    }
                }
            
            if (valor == 0) {//nuevo
                
                if (repetido == false) {
                    int respuesta = new ClienteI().insertCliente(rucx, rubrox, rubrox);
                    if (respuesta > 0) {
                        new rojerusan.RSNotifyFade("¡¡Agregado!! ", "Cliente agregado con exito!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                        limpiarCampos();
                        buscarValorTabla(nombre);
                    } else {
                        new rojerusan.RSNotifyFade("¡¡ERROR!! ", "No se pudo agregar los valores, contacte al adm o vuelva intentarlo!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);

                    }
                } else {
                    new rojerusan.RSNotifyFade("¡¡Valor Repetido!! ", "Los valore deben ser únicos, intente con otro valor y vuelva intentarlo!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

                }

            } else if (valor == 1) {//editar
                
                
                temp.setRuc(rucx);
                temp.setRazonSocial(name);
                temp.setEstado(estado);
                temp.setRubro(rubrox);
                int respuesta = temp.updateCliente();
                if (respuesta > 0) {
                    new rojerusan.RSNotifyFade("¡¡Actualizado!! ", "Cliente actualizado con exito!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                    limpiarCampos();
                    buscarValorTabla(nombre);
                } else {
                    new rojerusan.RSNotifyFade("¡¡ERROR!! ", "Tuvimos problemas para actualizar los valores, contacte al adm o vuelva intentarlo!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_guardarBtnActionPerformed

    private void rubroTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rubroTxtFocusGained
        rubroTxt.selectAll();
    }//GEN-LAST:event_rubroTxtFocusGained

    private void rucTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rucTxtFocusGained
      rucTxt.selectAll();
    }//GEN-LAST:event_rucTxtFocusGained

    private void razonSocialTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_razonSocialTxtFocusGained
      razonSocialTxt.selectAll();
    }//GEN-LAST:event_razonSocialTxtFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSRadioButton activoRb;
    private rojerusan.RSRadioButton bloqueadoRb;
    private javax.swing.ButtonGroup buttonGroup1;
    private rojeru_san.complementos.ButtonPane buttonPane1;
    public static RSComponentShade.RSButtonRippleShade editarBtn;
    private RSComponentShade.RSButtonRippleShade guardarBtn;
    private javax.swing.JLabel idTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    public static RSComponentShade.RSButtonRippleShade nuevoBtn;
    private rojeru_san.rsfield.RSTextFullRound razonSocialTxt;
    private RSComponentShade.RSButtonRippleShade resetBtn;
    private rojeru_san.rsfield.RSTextFullRound rubroTxt;
    private rojeru_san.rsfield.RSTextFullRound rucTxt;
    private rojerusan.RSTableMetro tabla;
    // End of variables declaration//GEN-END:variables

    public void iniciar() {
        llenarClientes("");
    }

    private void reset() {
        resetBtn.setEnabled(false);
        limpiarCampos();
        resetBtn.setEnabled(true);

    }

    public void llenarClientes() {
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        clientes.clear();
        clientes = (ArrayList) new ClienteI().ListarClientes("", "").clone();
        for (ClienteI cliente : clientes) {
            modelo.addRow(new Object[]{
                cliente.getId(), cliente.getRuc(), cliente.getRazonSocial(),cliente.getEstado()
            });
        }
        if (clientes.size() < 1) {
            modelo.addRow(new Object[]{
                "-", "Sin Resultados"
            });
        }
    }
    public void llenarClientes(String estadox) {
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        clientes.clear();
       clientes = (ArrayList) new ClienteI().ListarClientes(estadox, "").clone();
        for (ClienteI cliente : clientes) {
            modelo.addRow(new Object[]{
                cliente.getId(), cliente.getRuc(), cliente.getRazonSocial(),cliente.getEstado()
            });
        }
        if (clientes.size() < 1) {
            modelo.addRow(new Object[]{
                "-", "Sin Resultados"
            });
        }
    }

    private void activarDesactivar(boolean llave) {
        rucTxt.setEditable(llave);
        activoRb.setEnabled(llave);
        bloqueadoRb.setEnabled(llave);
        rubroTxt.setEditable(llave);
        razonSocialTxt.setEditable(llave);
        activoRb.setSelected(true);
    }

    private void limpiarCampos() {
        valor = -1;
        activarDesactivar(false);
        rucTxt.setText("");
        idTxt.setText("-");
        activoRb.setEnabled(false);
        bloqueadoRb.setEnabled(false);
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        nuevoBtn.setEnabled(agregar);
        editarBtn.setEnabled(editar);
        guardarBtn.setEnabled(false);
        resetBtn.setEnabled(true);
        rubroTxt.setText("");
        razonSocialTxt.setText("");
        llenarClientes("");
    }

    private boolean validarCamposLlenos() {
        boolean llave = false;
        if (rucTxt.getText().length() > 0) {
            boolean repetido=false;
            String rc = rucTxt.getText();
            for(ClienteI cliente:clientes){
                if(cliente.getRuc().equalsIgnoreCase(rc)){
                    repetido=true;
                }
            }
            if(repetido==false || valor==1){
                llave = true;
            }else{
                new rojerusan.RSNotifyFade("¡¡RUC REPETIDO!! ", "verifique el RUC ingresado no se encuentra previamente registrado!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
            }
            
            
            
        }else{
            new rojerusan.RSNotifyFade("¡¡RUC VACIO!! ", "Campo Ruc no puede quedar vacio!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);

        }
        return llave;
    }

    public void buscarValorTabla(String nombrex) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            if (tabla.getValueAt(i, 1).equals(nombrex)) {
                tabla.changeSelection(i, 1, false, false);
            }
        }
    }

}
