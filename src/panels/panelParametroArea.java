/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Clases.Area;
import Frames.MainFrame;
import com.sun.glass.events.KeyEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSNotifyFade;

/**
 *
 * @author Family
 */
public class panelParametroArea extends javax.swing.JPanel {

    ArrayList<Area> areas = new ArrayList();
    ArrayList<Area> hijos = new ArrayList();
    int valor = -1;
    String estado = "Activo";
    Area padre = new Area();
    int cambiarPadre = -1;
    boolean ignorar = true;
    public boolean agregar=false;
    public boolean editar=false;
    public panelParametroArea() {
        initComponents();
       valor = -1;
       
       
        cambiarPadre = -1;
        activarDesactivar(false);
        nombreTxt.setText("");
        mensajeLabel.setVisible(false);
        idTxt.setText("-");
        activoRb.setEnabled(false);
        bloqueadoRb.setEnabled(false);
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        nuevoBtn.setEnabled(agregar);
        editarBtn.setEnabled(editar);
        guardarBtn.setEnabled(false);
        resetBtn.setEnabled(true);
        areaCombo.setEnabled(true);
        cambioPadreBtn.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new rojerusan.RSTableMetro();
        buttonPane1 = new rojeru_san.complementos.ButtonPane();
        bloqueadoRb = new rojerusan.RSRadioButton();
        activoRb = new rojerusan.RSRadioButton();
        jLabel3 = new javax.swing.JLabel();
        idTxt = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nombreTxt = new rojeru_san.rsfield.RSTextFullRound();
        nuevoBtn = new RSComponentShade.RSButtonRippleShade();
        editarBtn = new RSComponentShade.RSButtonRippleShade();
        resetBtn = new RSComponentShade.RSButtonRippleShade();
        jLabel4 = new javax.swing.JLabel();
        areaCombo = new rojerusan.RSComboBox();
        cambioPadreBtn = new RSComponentShade.RSButtonRippleShade();
        nuevoBtn1 = new RSComponentShade.RSButtonRippleShade();
        guardarBtn = new RSComponentShade.RSButtonRippleShade();
        mensajeLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(59, 59, 59));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_layers_30px.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ConfiguraciÃ³n de Areas Principal y Secundarias.");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Valor", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setBackgoundHead(new java.awt.Color(62, 62, 62));
        tabla.setColorBorderHead(new java.awt.Color(59, 59, 59));
        tabla.setColorBorderRows(new java.awt.Color(255, 255, 255));
        tabla.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        tabla.setColorSecondary(new java.awt.Color(255, 255, 255));
        tabla.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        tabla.setGridColor(new java.awt.Color(0, 0, 0));
        tabla.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMinWidth(80);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(80);
            tabla.getColumnModel().getColumn(0).setMaxWidth(90);
            tabla.getColumnModel().getColumn(2).setMinWidth(120);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(120);
            tabla.getColumnModel().getColumn(2).setMaxWidth(180);
        }

        buttonPane1.setBackground(new java.awt.Color(59, 59, 59));
        buttonPane1.setColorHover(new java.awt.Color(60, 60, 60));
        buttonPane1.setColorNormal(new java.awt.Color(59, 59, 59));

        buttonGroup1.add(bloqueadoRb);
        bloqueadoRb.setForeground(new java.awt.Color(255, 255, 255));
        bloqueadoRb.setText("Bloqueado");
        bloqueadoRb.setColorCheck(new java.awt.Color(0, 204, 255));
        bloqueadoRb.setColorUnCheck(new java.awt.Color(150, 150, 150));
        bloqueadoRb.setEnabled(false);
        bloqueadoRb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bloqueadoRbItemStateChanged(evt);
            }
        });
        bloqueadoRb.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bloqueadoRbStateChanged(evt);
            }
        });

        buttonGroup1.add(activoRb);
        activoRb.setForeground(new java.awt.Color(255, 255, 255));
        activoRb.setSelected(true);
        activoRb.setText("Activo");
        activoRb.setColorCheck(new java.awt.Color(0, 204, 255));
        activoRb.setColorUnCheck(new java.awt.Color(150, 150, 150));
        activoRb.setEnabled(false);
        activoRb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                activoRbItemStateChanged(evt);
            }
        });
        activoRb.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                activoRbStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("ID:");

        idTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idTxt.setForeground(new java.awt.Color(255, 255, 255));
        idTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idTxt.setText("-");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Valor:");

        nombreTxt.setEditable(false);
        nombreTxt.setBackground(new java.awt.Color(59, 59, 59));
        nombreTxt.setForeground(new java.awt.Color(255, 255, 255));
        nombreTxt.setBorderColor(new java.awt.Color(255, 255, 255));
        nombreTxt.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        nombreTxt.setPhColor(new java.awt.Color(255, 255, 255));
        nombreTxt.setPlaceholder("Ingrese el valor");
        nombreTxt.setSelectionColor(new java.awt.Color(0, 102, 102));
        nombreTxt.setSoloLetras(true);
        nombreTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTxtActionPerformed(evt);
            }
        });
        nombreTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombreTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreTxtKeyReleased(evt);
            }
        });

        nuevoBtn.setBackground(new java.awt.Color(59, 59, 59));
        nuevoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_add_32px.png"))); // NOI18N
        nuevoBtn.setBgHover(new java.awt.Color(110, 110, 110));
        nuevoBtn.setBgShade(new java.awt.Color(59, 59, 59));
        nuevoBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        editarBtn.setBackground(new java.awt.Color(59, 59, 59));
        editarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_edit_32px_3.png"))); // NOI18N
        editarBtn.setBgHover(new java.awt.Color(110, 110, 110));
        editarBtn.setBgShade(new java.awt.Color(59, 59, 59));
        editarBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(59, 59, 59));
        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_refresh_24px.png"))); // NOI18N
        resetBtn.setBgHover(new java.awt.Color(110, 110, 110));
        resetBtn.setBgShade(new java.awt.Color(59, 59, 59));
        resetBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Categoria:");

        areaCombo.setToolTipText("Presione el boton Buscar para actualizar los valores.");
        areaCombo.setColorArrow(new java.awt.Color(255, 255, 255));
        areaCombo.setColorBorde(new java.awt.Color(255, 255, 255));
        areaCombo.setColorBoton(new java.awt.Color(0, 102, 102));
        areaCombo.setColorFondo(new java.awt.Color(59, 59, 59));
        areaCombo.setColorSeleccion(new java.awt.Color(0, 102, 102));
        areaCombo.setDisabledIdex("");
        areaCombo.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        areaCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                areaComboItemStateChanged(evt);
            }
        });

        cambioPadreBtn.setBackground(new java.awt.Color(59, 59, 59));
        cambioPadreBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_up_down_arrow_40px.png"))); // NOI18N
        cambioPadreBtn.setText("Cambiar Padre");
        cambioPadreBtn.setToolTipText("Cambiar la Clase principal de un Ãrea secundaria");
        cambioPadreBtn.setBgHover(new java.awt.Color(110, 110, 110));
        cambioPadreBtn.setBgShade(new java.awt.Color(59, 59, 59));
        cambioPadreBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        cambioPadreBtn.setIconTextGap(2);
        cambioPadreBtn.setMargin(new java.awt.Insets(2, 5, 2, 14));
        cambioPadreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambioPadreBtnActionPerformed(evt);
            }
        });

        nuevoBtn1.setBackground(new java.awt.Color(59, 59, 59));
        nuevoBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_search_32px.png"))); // NOI18N
        nuevoBtn1.setBgHover(new java.awt.Color(110, 110, 110));
        nuevoBtn1.setBgShade(new java.awt.Color(59, 59, 59));
        nuevoBtn1.setBgShadeHover(new java.awt.Color(59, 59, 59));
        nuevoBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtn1ActionPerformed(evt);
            }
        });

        guardarBtn.setBackground(new java.awt.Color(59, 59, 59));
        guardarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_save_36px.png"))); // NOI18N
        guardarBtn.setBgHover(new java.awt.Color(110, 110, 110));
        guardarBtn.setBgShade(new java.awt.Color(59, 59, 59));
        guardarBtn.setBgShadeHover(new java.awt.Color(59, 59, 59));
        guardarBtn.setEnabled(false);
        guardarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPane1Layout = new javax.swing.GroupLayout(buttonPane1);
        buttonPane1.setLayout(buttonPane1Layout);
        buttonPane1Layout.setHorizontalGroup(
            buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPane1Layout.createSequentialGroup()
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(activoRb, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bloqueadoRb, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(buttonPane1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nombreTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(areaCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(buttonPane1Layout.createSequentialGroup()
                                .addComponent(nuevoBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nuevoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(guardarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(buttonPane1Layout.createSequentialGroup()
                                .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cambioPadreBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        buttonPane1Layout.setVerticalGroup(
            buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPane1Layout.createSequentialGroup()
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nuevoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(areaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nuevoBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(buttonPane1Layout.createSequentialGroup()
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(buttonPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bloqueadoRb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(activoRb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cambioPadreBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))))
        );

        mensajeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mensajeLabel.setForeground(new java.awt.Color(255, 255, 255));
        mensajeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mensajeLabel.setText("Presione 2 Veces Click  para seleccionar la nueva Ãrea.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(buttonPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(mensajeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mensajeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nombreTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTxtActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        new Thread(this::reset).start();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        nombreTxt.requestFocus();
        valor = 0;
        activarDesactivar(true);
        bloqueadoRb.setEnabled(false);
        activoRb.setSelected(true);
        editarBtn.setEnabled(false);
        nombreTxt.setText("");
        idTxt.setText("-");
        guardarBtn.setEnabled(true);
        nuevoBtn.setEnabled(false);
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed

        int fila = tabla.getSelectedRow();
        String id = fila >= 0 ? tabla.getValueAt(fila, 0).toString() : "-";
        if (fila >= 0 && !id.equals("-")) {
            activarDesactivar(true);
            valor = 1;
            editarBtn.setEnabled(false);
            int idint = Integer.valueOf(id);
            valor = 1;
            if (padre.getNombre().equalsIgnoreCase("clase principal")) {
                for (Area area : areas) {
                    if (idint == area.getId()) {
                        idTxt.setText(area.getId() + "");
                        nombreTxt.setText(area.getNombre());
                        if (area.getEstado().equalsIgnoreCase("activo")) {
                            activoRb.setSelected(true);
                        } else {
                            bloqueadoRb.setSelected(true);
                        }
                    }

                }
            } else {
                for (Area area : hijos) {
                    if (idint == area.getId()) {
                        idTxt.setText(area.getId() + "");
                        nombreTxt.setText(area.getNombre());
                        if (area.getEstado().equalsIgnoreCase("activo")) {
                            activoRb.setSelected(true);
                        } else {
                            bloqueadoRb.setSelected(true);
                        }
                    }

                }
            }
            nuevoBtn.setEnabled(false);
            guardarBtn.setEnabled(true);
            areaCombo.setEnabled(false);
            cambioPadreBtn.setVisible(true);
        } else {
            if (valor == 1) {

            } else {
                new rojerusan.RSNotifyFade("Â¡Â¡No hay SelecciÃ³n!! ", "Seleccione un valor en la tabla valido para editar!", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

            }

        }
    }//GEN-LAST:event_editarBtnActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int fila = tabla.getSelectedRow();
        String id = fila >= 0 ? tabla.getValueAt(fila, 0).toString() : "-";
        if (fila >= 0 && cambiarPadre > 0 && evt.getClickCount()==2) {
            id = fila >= 0 ? tabla.getValueAt(fila, 0).toString() : "-";
            int idpadrex = Integer.valueOf(id);
            String namePadre = tabla.getValueAt(fila, 1).toString();
            int idHijo = Integer.valueOf(idTxt.getText());
            int valor = new Area().updatePadre(idHijo,idpadrex);
            if (valor > 0) {
                new rojerusan.RSNotifyFade("Â¡Â¡Ãrea principal Cambiada!! ", "Se modificaron los datos con exito!", 5, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                for (int i = 0; i < areaCombo.getItemCount(); i++) {
                    if (namePadre.equals(areaCombo.getItemAt(i))) {
                        areaCombo.setSelectedIndex(i);
                        actualizarPadre(namePadre);
                        cambiarPadre=-1;
                    }
                   reset();
                }
            }
        } else if (fila >= 0 && !id.equals("-") && valor < 0) {
            int idint = Integer.valueOf(id);

            if (padre.getNombre().equalsIgnoreCase("clase principal")) {
                for (Area area : areas) {
                    if (idint == area.getId()) {
                        idTxt.setText(area.getId() + "");
                        nombreTxt.setText(area.getNombre());
                        if (area.getEstado().equalsIgnoreCase("activo")) {
                            activoRb.setSelected(true);
                        } else {
                            bloqueadoRb.setSelected(true);
                        }
                    }

                }
            } else {
                for (Area area : hijos) {
                    if (idint == area.getId()) {
                        idTxt.setText(area.getId() + "");
                        nombreTxt.setText(area.getNombre());
                        if (area.getEstado().equalsIgnoreCase("activo")) {
                            activoRb.setSelected(true);
                        } else {
                            bloqueadoRb.setSelected(true);
                        }
                    }

                }
            }

        } else {
            new rojerusan.RSNotifyFade("Â¡Â¡No hay SelecciÃ³n!! ", "Seleccione un valor en la tabla valido para editar!", 3, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

        }


    }//GEN-LAST:event_tablaMouseClicked

    private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
        if (validarCamposLlenos() == true) {
            String nombre = nombreTxt.getText();

            if (valor == 0) {//nuevo
                boolean repetido = false;
                for (Area area : areas) {
                    if (area.getNombre().equalsIgnoreCase(nombre)) {
                        repetido = true;
                    }
                }
                if (repetido == false) {
                    int respuesta = new Area().newArea(padre.getId(), nombre);
                    if (respuesta > 0) {
                        new rojerusan.RSNotifyFade("Â¡Â¡Agregado!! ", "Color agregado con exito!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                        limpiarCampos();
                        buscarValorTabla(nombre);
                    } else {
                        new rojerusan.RSNotifyFade("Â¡Â¡ERROR!! ", "No se pudo agregar los valores, contacte al adm o vuelva intentarlo!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);

                    }
                } else {
                    new rojerusan.RSNotifyFade("Â¡Â¡Valor Repetido!! ", "Los valore deben ser Ãºnicos, intente con otro valor y vuelva intentarlo!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);

                }

            } else if (valor == 1) {//editar
                int id = Integer.valueOf(idTxt.getText());
                int respuesta = new Area().updateArea(id, nombre, estado);
                if (respuesta > 0) {
                    new rojerusan.RSNotifyFade("Â¡Â¡Actualizado!! ", "Color actualizado con exito!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.SUCCESS).setVisible(true);
                    limpiarCampos();
                    buscarValorTabla(nombre);
                } else {
                    new rojerusan.RSNotifyFade("Â¡Â¡ERROR!! ", "Tuvimos problemas para actualizar los valores, contacte al adm o vuelva intentarlo!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.ERROR).setVisible(true);
                }
            }
        } else {
            new rojerusan.RSNotifyFade("Â¡Â¡Campo Vacio!! ", "El campo <Valor> no puede quedar vacio.!", 4, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);
        }
    }//GEN-LAST:event_guardarBtnActionPerformed

    private void activoRbStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_activoRbStateChanged

    }//GEN-LAST:event_activoRbStateChanged

    private void bloqueadoRbStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bloqueadoRbStateChanged

    }//GEN-LAST:event_bloqueadoRbStateChanged

    private void activoRbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_activoRbItemStateChanged
        estado = "Activo";
    }//GEN-LAST:event_activoRbItemStateChanged

    private void bloqueadoRbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bloqueadoRbItemStateChanged
        estado = "Bloqueado";
    }//GEN-LAST:event_bloqueadoRbItemStateChanged

    private void nombreTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTxtKeyReleased
        if (nombreTxt.getText().length() > 43) {
            evt.consume();
        }
    }//GEN-LAST:event_nombreTxtKeyReleased

    private void nombreTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTxtKeyPressed
        if (evt.getKeyLocation() == KeyEvent.VK_ESCAPE) {
            new Thread(this::reset).start();
        }
    }//GEN-LAST:event_nombreTxtKeyPressed

    private void cambioPadreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambioPadreBtnActionPerformed
        new rojerusan.RSNotifyFade("Â¡Â¡Seleccione!! ", "Seleccione el Ã¡rea Principal al cual desea cambiar dentro de la tabla\nPresionado 2 Veces Click!", 7, RSNotifyFade.PositionNotify.BottomRight, RSNotifyFade.TypeNotify.INFORMATION).setVisible(true);
        
        cambiarPadre = 1;
        mensajeLabel.setVisible(true);
        nuevoBtn.setEnabled(false);
        editarBtn.setEnabled(false);
        cambioPadreBtn.setVisible(false);
        areaCombo.setEnabled(false);
        nombreTxt.setEditable(false);
        activoRb.setEnabled(false);
        bloqueadoRb.setEnabled(false);
        buscarPadres();


    }//GEN-LAST:event_cambioPadreBtnActionPerformed

    private void areaComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_areaComboItemStateChanged



    }//GEN-LAST:event_areaComboItemStateChanged

    private void nuevoBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtn1ActionPerformed
      nombreTxt.setText("");
            idTxt.setText("-");
            valor = -1;
            String nombrePadre = areaCombo.getSelectedItem().toString();
            actualizarPadre(nombrePadre);
            actualizarHijos();
    }//GEN-LAST:event_nuevoBtn1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSRadioButton activoRb;
    private rojerusan.RSComboBox areaCombo;
    private rojerusan.RSRadioButton bloqueadoRb;
    private javax.swing.ButtonGroup buttonGroup1;
    private rojeru_san.complementos.ButtonPane buttonPane1;
    private RSComponentShade.RSButtonRippleShade cambioPadreBtn;
    public RSComponentShade.RSButtonRippleShade editarBtn;
    private RSComponentShade.RSButtonRippleShade guardarBtn;
    private javax.swing.JLabel idTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mensajeLabel;
    private rojeru_san.rsfield.RSTextFullRound nombreTxt;
    public RSComponentShade.RSButtonRippleShade nuevoBtn;
    private RSComponentShade.RSButtonRippleShade nuevoBtn1;
    private RSComponentShade.RSButtonRippleShade resetBtn;
    private rojerusan.RSTableMetro tabla;
    // End of variables declaration//GEN-END:variables

    public void iniciar() {
        llenarAreas("");
    }

    public void reset() {
        resetBtn.setEnabled(false);
        limpiarCampos();
        resetBtn.setEnabled(true);

    }

    public void llenarAreas(String estadox) {
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        areas.clear();
        areas = (ArrayList) new Area().getAllArea(estadox).clone();
        for (Area area : areas) {
            modelo.addRow(new Object[]{
                area.getId(), area.getNombre(), area.getEstado()
            });
        }
        if (areas.size() < 1) {
            modelo.addRow(new Object[]{
                "-", "Sin Resultados"
            });
        }
        MainFrame.setCategoria((ArrayList) new Area().getAllArea("activo"));
    }

    public void activarDesactivar(boolean llave) {
        nombreTxt.setEditable(llave);
        activoRb.setEnabled(llave);
        bloqueadoRb.setEnabled(llave);
        activoRb.setSelected(true);
    }

    public void limpiarCampos() {
        valor = -1;
        cambiarPadre = -1;
        activarDesactivar(false);
        nombreTxt.setText("");
        mensajeLabel.setVisible(false);
        idTxt.setText("-");
        activoRb.setEnabled(false);
        bloqueadoRb.setEnabled(false);
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        nuevoBtn.setEnabled(agregar);
        editarBtn.setEnabled(editar);
        guardarBtn.setEnabled(false);
        resetBtn.setEnabled(true);
        areaCombo.setEnabled(true);
        
        cambioPadreBtn.setVisible(false);
        actualizarHijos();
        

    }

    public boolean validarCamposLlenos() {
        boolean llave = false;
        if (nombreTxt.getText().length() > 0) {
            llave = true;
        }
        return llave;
    }

    public void buscarValorTabla(String nombrex) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            if (tabla.getValueAt(i, 1).equals(nombrex)) {
                tabla.changeSelection(i, 1, false, false);
            }
        }
    }

    private void buscarPadres(){
        
        areaCombo.setSelectedIndex(0);
        actualizarPadre(areaCombo.getSelectedItem().toString());
        actualizarHijos();
        
    }
    public void llenarClasePrincipal() {
        ignorar = true;
        areaCombo.removeAllItems();
        areas.clear();
        areas = (ArrayList) new Area().getAreaPrincipal().clone();
        for (Area area : areas) {
            areaCombo.addItem(area.getNombre());
            if (area.getId() == 1) {
                padre = new Area(area.getId(),
                        area.getIdPadre(), area.getNombre(), area.getEstado());
            }
        }
        areaCombo.setSelectedIndex(0);
        ignorar = false;
        valor = -1;
        actualizarHijos();
    }

    public void actualizarHijos() {
        ignorar = true;

        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        hijos.clear();
        hijos = (ArrayList) new Area().getHijos(padre.getId()).clone();
        for (Area area : hijos) {
            modelo.addRow(new Object[]{
                area.getId(), area.getNombre(), area.getEstado()
            });
        }
        if (hijos.size() < 1) {
            modelo.addRow(new Object[]{
                "-", "Sin Resultados"
            });
        }
        ignorar = false;

    }

    public void actualizarPadre(String padreName) {
        for (Area area : areas) {
            if (padreName.equals(area.getNombre())) {
                padre = new Area(area.getId(), area.getIdPadre(),
                        area.getNombre(), area.getEstado());
            }
        }
    }

}
