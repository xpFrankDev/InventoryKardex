/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Mensaje;
import Clases.ScrollSens;
import Clases.Usuario;
import Panels.panelContenido;
import com.sun.awt.AWTUtilities;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author Rojeru San
 */
public class Notificaciones extends javax.swing.JDialog {

    ImageIcon iconVer = new ImageIcon(getClass().getResource("/imgs/icons8_expand_arrow_24px.png"));
    ImageIcon iconOcultar = new ImageIcon(getClass().getResource("/imgs/icons8_collapse_arrow_24px.png"));
    boolean llave = false;
    boolean ver = false;
    JPanel x = new JPanel();
    Usuario usuario = new Usuario();
    ArrayList<Mensaje> mensajes = new ArrayList();
    ArrayList<Mensaje> mostrados = new ArrayList();
    int alineacion = 0;
    public Notificaciones() {
        initComponents();
        this.setLocationRelativeTo(null);//centrar
        AWTUtilities.setWindowOpaque(this, false);//Transparente
        changeIcon();
        new ScrollSens(scroll, 50);
        inic();
    }

    public Notificaciones(Usuario usuario) {
        initComponents();
        this.usuario = usuario;
        this.setLocationRelativeTo(null);//centrar
        AWTUtilities.setWindowOpaque(this, false);//Transparente
        changeIcon();
        new ScrollSens(scroll, 50);
        inic();
    }

    public void changeIcon() {
        Image icon = new ImageIcon(getClass().getResource("/imgs/logo.png")).getImage();
        setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        panelHeader = new rojeru_san.rspanel.RSPanelVector();
        jLabel1 = new javax.swing.JLabel();
        totalMensajesTxt = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        verBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mensajes para "+MainFrame.getUsuario());
        setAlwaysOnTop(true);
        setUndecorated(true);

        panelHeader.setBackground(new java.awt.Color(0, 102, 102));
        panelHeader.setColorBorde(new java.awt.Color(0, 102, 102));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_notification_30px.png"))); // NOI18N

        totalMensajesTxt.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        totalMensajesTxt.setForeground(new java.awt.Color(255, 255, 255));
        totalMensajesTxt.setText("@");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mensajes Nuevos");

        verBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_expand_arrow_24px.png"))); // NOI18N
        verBtn.setContentAreaFilled(false);
        verBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        verBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verBtnActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icons8_eye_25px.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalMensajesTxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(16, 16, 16)
                .addComponent(verBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(totalMensajesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(verBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setToolTipText("");
        scroll.setMaximumSize(new java.awt.Dimension(235, 32000));
        scroll.setMinimumSize(new java.awt.Dimension(235, 30));
        scroll.setName(""); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addGap(382, 382, 382))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void verBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verBtnActionPerformed
        if (llave == false) {
            llave = true;
            verBtn.setIcon(iconOcultar);
            new Thread(this::mostrarMensajes).start();
        } else if (llave == true) {
            llave = false;
            verBtn.setIcon(iconVer);
            new Thread(this::ocultarMensajes).start();
        }

    }//GEN-LAST:event_verBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (ver == false) {
            ver = !ver;
            new Thread(this::mostrarPanel).start();
        } else {
            ver = !ver;
            new Thread(this::ocultarPanel).start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame parent = new JFrame();
                
                new Notificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private rojeru_san.rspanel.RSPanelVector panelHeader;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JLabel totalMensajesTxt;
    private javax.swing.JButton verBtn;
    // End of variables declaration//GEN-END:variables

    private void inic() {
        alineacion = this.getX();
        scroll.setVisible(false);
        x.setBackground(new Color(0, 153, 153));
        x.setLayout(new BoxLayout(x, BoxLayout.Y_AXIS));
        scroll.setViewportView(x);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double width = screenSize.getWidth();
        double height = screenSize.getHeight();
        this.setLocation((int) (width - 41), 30);
        new Thread(this::cargarMensajes).start();
    }

    private void mostrarMensajes() {
        scroll.setVisible(true);
        for (int i = 31; i < 346; i++) {
            scroll.setSize(new Dimension(260, i));
            scroll.repaint();
            scroll.revalidate();
            esperar(i < 50 ? 2 : i > 50 && i < 150 ? 1 : i > 150 ? 1 : 5);
        }
    }

    private void ocultarMensajes() {
        for (int i = 345; i > 15; i--) {
            scroll.setSize(new Dimension(260, i));
            scroll.repaint();
            scroll.revalidate();
            esperar(i < 50 ? 2 : i > 50 && i < 150 ? 1 : i > 150 ? 1 : 5);
        }
        scroll.setVisible(false);
    }

    private void mostrarPanel() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double width = screenSize.getWidth();
        double height = screenSize.getHeight();

        for (int i = -41; i > -286; i--) {
            this.setLocation((int) (width + i), 30);
            esperar(i < 50 ? 1 : i > 50 && i < 150 ? 1 : i > 150 ? 2 : 5);
        }
    }

    private void ocultarPanel() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double width = screenSize.getWidth();
        double height = screenSize.getHeight();

        if (scroll.isShowing()) {
            llave = false;
            verBtn.setIcon(iconVer);
            ocultarMensajes();
        }

        for (int i = -285; i < -41; i++) {
            this.setLocation((int) (width + i), 30);
            esperar(i < 50 ? 1 : i > 50 && i < 150 ? 1 : i > 150 ? 2 : 5);
        }

    }

    private void esperar(int x) {
        try {
            Thread.sleep(x);
        } catch (InterruptedException ex) {
            Logger.getLogger(Notificaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarMensajes() {
        mensajes = (ArrayList) usuario.getUserMensajes(usuario.getCodigo(), "Sin Leer").clone();

        for (Mensaje mensaje : mensajes) {
            boolean impreso = false;
            for (Mensaje msj : mostrados) {
                if (mensaje.getIdMensaje() == msj.getIdMensaje()) {
                    impreso = true;
                }
            }
            if (impreso == false) {
                JPanel xTemp = new JPanel();
                xTemp.setBackground(new Color(0, 153, 153));
                xTemp.setLayout(new BoxLayout(xTemp, BoxLayout.Y_AXIS));
                xTemp.add(new panelContenido(mensaje,alineacion));
                xTemp.add(x);
                x = xTemp;
                
                //x.add(new panelContenido(mensaje));
                x.repaint();
                x.revalidate();
                scroll.setViewportView(x);
            }
        }
        totalMensajesTxt.setText("("+mensajes.size()+")");
    }
}
